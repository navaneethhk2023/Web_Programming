> packages=c(17.1,14, 15, 12, 4.3, 8.3, 4.4, 4,
+            13.5, 15, 14, 13, 4.2, 8.2, 34, 4.4,
+            12.5, 24, 15.6, 14, 3.8, 65, 4, 12,
+            15.6, 23, 5.6, 34, 3.7, 7.8, 5.9, 3.9,
+            12, 24, 5.4, 24, 13.7, 7.8, 5.8, 45,
+            11.4, 5.8, 15.4, 15, 3.7, 17.6, 5.8, 3.8,
+            9.4, 5.8, 5.3, 13, 3.6, 7.3, 16.3, 14.3,
+            8.4, 5.6, 5.3, 23, 13.4, 6.9, 6.4, 13.8,
+            7.4, 23, 25, 13, 2.8, 16.8, 6.5, 3.7,
+            6, 5.7, 22, 4.3, 98.5, 16.5, 6.6, 4.3)
> x
Error: object 'x' not found
> x=mean(packages)
> x
[1] 13.39875
> 
> y=median(packages)
> y
[1] 10.4
> z=var(packages)
> z
[1] 192.9097
> sdev=sqrt(z)
> sdev
[1] 13.8892
> t=table(packages)
> t
packages
 2.8  3.6  3.7  3.8  3.9    4  4.2  4.3  4.4  5.3  5.4  5.6  5.7  5.8  5.9    6  6.4  6.5  6.6  6.9  7.3  7.4  7.8  8.2  8.3  8.4 
   1    1    3    2    1    2    1    3    2    2    1    2    1    4    1    1    1    1    1    1    1    1    2    1    1    1 
 9.4 11.4   12 12.5   13 13.4 13.5 13.7 13.8   14 14.3   15 15.4 15.6 16.3 16.5 16.8 17.1 17.6   22   23   24   25   34   45   65 
   1    1    3    1    3    1    1    1    1    3    1    3    1    2    1    1    1    1    1    1    3    3    1    2    1    1 
98.5 
   1 
> p=seq(packages)
> p
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43
[44] 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80
> c=rep(t[1],t[2])
> c
2.8 
  1 
> f1=length(packages[packages>=0 & packages<=4])
> f1
[1] 10
> f2=length(packages[packages>4 & packages<=6])
> f3=length(packages[packages>6 & packages<=10])
> f4=length(packages[packages>10 & packages<=14])
> f5=length(packages[packages>14 & packages<=17])
> f6=length(packages[packages>17 & packages<=25])
> f7=length(packages[packages>25 & packages<=100])
> f
Error: object 'f' not found
> f=c(f1,f2,f3,f4,f5,f6,f7)
> f
[1] 10 18 12 15 10 10  5
> p1=packages[packages>4 & packages<=6]
> p1
 [1] 4.3 4.4 4.2 4.4 5.6 5.9 5.4 5.8 5.8 5.8 5.8 5.3 5.6 5.3
[15] 6.0 5.7 4.3 4.3
> pack=rep(packages,f)
Error in rep(packages, f) : invalid 'times' argument
> p2=packages[packages>6 & packages<=10]
> p1=packages[packages>=0 & packages <= 4]
> p1
 [1] 4.0 3.8 4.0 3.7 3.9 3.7 3.8 3.6 2.8 3.7
> p2=packages[packages>4 & packages<=6]
> p3=packages[packages>6 & packages<=10]
> p4=packages[packages>10 & packages<=14]
> p5=packages[packages>14 & packages<=17]
> p6=packages[packages>17 & packages<=25]
> p7=packages[packages>25 & packages<=100]
> p=c(p1,p2,p3,p4,p5,p6,p7)
> p
 [1]  4.0  3.8  4.0  3.7  3.9  3.7  3.8  3.6  2.8  3.7  4.3
[12]  4.4  4.2  4.4  5.6  5.9  5.4  5.8  5.8  5.8  5.8  5.3
[23]  5.6  5.3  6.0  5.7  4.3  4.3  8.3  8.2  7.8  7.8  9.4
[34]  7.3  8.4  6.9  6.4  7.4  6.5  6.6 14.0 12.0 13.5 14.0
[45] 13.0 12.5 14.0 12.0 12.0 13.7 11.4 13.0 13.4 13.8 13.0
[56] 15.0 15.0 15.6 15.6 15.4 15.0 16.3 14.3 16.8 16.5 17.1
[67] 24.0 23.0 24.0 24.0 17.6 23.0 23.0 25.0 22.0 34.0 65.0
[78] 34.0 45.0 98.5
> packi=rep(p,f)
Error in rep(p, f) : invalid 'times' argument
> pa=(2.5,5.5, 8.5,16,21.5,63)
Error: unexpected ',' in "pa=(2.5,"
> pa=c(2.5,5.5, 8.5,12.5,16,21.5,63)
> pack=rep(pa,f)
> pack
 [1]  2.5  2.5  2.5  2.5  2.5  2.5  2.5  2.5  2.5  2.5  5.5
[12]  5.5  5.5  5.5  5.5  5.5  5.5  5.5  5.5  5.5  5.5  5.5
[23]  5.5  5.5  5.5  5.5  5.5  5.5  8.5  8.5  8.5  8.5  8.5
[34]  8.5  8.5  8.5  8.5  8.5  8.5  8.5 12.5 12.5 12.5 12.5
[45] 12.5 12.5 12.5 12.5 12.5 12.5 12.5 12.5 12.5 12.5 12.5
[56] 16.0 16.0 16.0 16.0 16.0 16.0 16.0 16.0 16.0 16.0 21.5
[67] 21.5 21.5 21.5 21.5 21.5 21.5 21.5 21.5 21.5 63.0 63.0
[78] 63.0 63.0 63.0
> table
function (..., exclude = if (useNA == "no") c(NA, NaN), useNA = c("no", 
    "ifany", "always"), dnn = list.names(...), deparse.level = 1) 
{
    list.names <- function(...) {
        l <- as.list(substitute(list(...)))[-1L]
        if (length(l) == 1L && is.list(..1) && !is.null(nm <- names(..1))) 
            return(nm)
        nm <- names(l)
        fixup <- if (is.null(nm)) 
            seq_along(l)
        else nm == ""
        dep <- vapply(l[fixup], function(x) switch(deparse.level + 
            1, "", if (is.symbol(x)) as.character(x) else "", 
            deparse(x, nlines = 1)[1L]), "")
        if (is.null(nm)) 
            dep
        else {
            nm[fixup] <- dep
            nm
        }
    }
    miss.use <- missing(useNA)
    miss.exc <- missing(exclude)
    useNA <- if (miss.use && !miss.exc && !match(NA, exclude, 
        nomatch = 0L)) 
        "ifany"
    else match.arg(useNA)
    doNA <- useNA != "no"
    if (!miss.use && !miss.exc && doNA && match(NA, exclude, 
        nomatch = 0L)) 
        warning("'exclude' containing NA and 'useNA' != \"no\"' are a bit contradicting")
    args <- list(...)
    if (length(args) == 1L && is.list(args[[1L]])) {
        args <- args[[1L]]
        if (length(dnn) != length(args)) 
            dnn <- paste(dnn[1L], seq_along(args), sep = ".")
    }
    if (!length(args)) 
        stop("nothing to tabulate")
    bin <- 0L
    lens <- NULL
    dims <- integer()
    pd <- 1L
    dn <- NULL
    for (a in args) {
        if (is.null(lens)) 
            lens <- length(a)
        else if (length(a) != lens) 
            stop("all arguments must have the same length")
        fact.a <- is.factor(a)
        if (doNA) 
            aNA <- anyNA(a)
        if (!fact.a) {
            a0 <- a
            op <- options(warn = 2)
            a <- factor(a, exclude = exclude)
            options(op)
        }
        add.na <- doNA
        if (add.na) {
            ifany <- (useNA == "ifany")
            anNAc <- anyNA(a)
            add.na <- if (!ifany || anNAc) {
                ll <- levels(a)
                if (add.ll <- !anyNA(ll)) {
                  ll <- c(ll, NA)
                  TRUE
                }
                else if (!ifany && !anNAc) 
                  FALSE
                else TRUE
            }
            else FALSE
        }
        if (add.na) 
            a <- factor(a, levels = ll, exclude = NULL)
        else ll <- levels(a)
        a <- as.integer(a)
        if (fact.a && !miss.exc) {
            ll <- ll[keep <- which(match(ll, exclude, nomatch = 0L) == 
                0L)]
            a <- match(a, keep)
        }
        else if (!fact.a && add.na) {
            if (ifany && !aNA && add.ll) {
                ll <- ll[!is.na(ll)]
                is.na(a) <- match(a0, c(exclude, NA), nomatch = 0L) > 
                  0L
            }
            else {
                is.na(a) <- match(a0, exclude, nomatch = 0L) > 
                  0L
            }
        }
        nl <- length(ll)
        dims <- c(dims, nl)
        if (prod(dims) > .Machine$integer.max) 
            stop("attempt to make a table with >= 2^31 elements")
        dn <- c(dn, list(ll))
        bin <- bin + pd * (a - 1L)
        pd <- pd * nl
    }
    names(dn) <- dnn
    bin <- bin[!is.na(bin)]
    if (length(bin)) 
        bin <- bin + 1L
    y <- array(tabulate(bin, pd), dims, dimnames = dn)
    class(y) <- "table"
    y
}
<bytecode: 0x00000194987d7a48>
<environment: namespace:base>
> packi=table(pack)
> packi
pack
 2.5  5.5  8.5 12.5   16 21.5   63 
  10   18   12   15   10   10    5 
> xbar=mean(pack)
> xbar
[1] 13.79375
> med=median(pack)
> med
[1] 10.5
> t=(87*80)/100
> t
[1] 69.6
> p=18+(((t-65)/10)*8)
> p
[1] 21.68
> cgpa=c(4.15,	9.25,	4.38,	6.11,	5.82,	5.77,	9.04,6.38,
+        9.6,	 6.48, 7.8,	8.83,	4.67,	9.32,	8.18,	8.18,
+        9.57,	4.66,	6.38,	5.08,	8.46,	6.88,	5.25,	8.8,
+        7.59,	5.4	, 4.13,	7.6,	7.18,	7.15,	8.96,	8.92,
+        8.08,	6.86,	5.33,	5.67,	5.87,	9.95,	7.16,	7.63,
+        6.22,	9.3,	6.27,	6.66,	6.77,	4.49,	5.31,	7.81,
+        4.81,	9.8,	8.1,	7.98,	4.28,	5.93,	6.99,	5.47,
+        8.56	,7.28,	5	,5.95,	4.08,	7.86	,4.59,	8.99,
+        4.37,	4.86,	7.92,	7.06,	9.41,	6.37,	7.64,	6.48,
+        8.35,	8.8	,6.4,	8.61,	6.94,	6.91,	6.72,	8.94
+ )
> cgpa
 [1] 4.15 9.25 4.38 6.11 5.82 5.77 9.04 6.38 9.60 6.48 7.80 8.83 4.67 9.32 8.18 8.18 9.57 4.66 6.38 5.08 8.46 6.88 5.25 8.80 7.59 5.40
[27] 4.13 7.60 7.18 7.15 8.96 8.92 8.08 6.86 5.33 5.67 5.87 9.95 7.16 7.63 6.22 9.30 6.27 6.66 6.77 4.49 5.31 7.81 4.81 9.80 8.10 7.98
[53] 4.28 5.93 6.99 5.47 8.56 7.28 5.00 5.95 4.08 7.86 4.59 8.99 4.37 4.86 7.92 7.06 9.41 6.37 7.64 6.48 8.35 8.80 6.40 8.61 6.94 6.91
[79] 6.72 8.94
> plot(packages,cgpa)
Error in plot.new() : figure margins too large
> plot(cgpa,packages)
Error in plot.new() : figure margins too large
> plot(cgpa,packages)
Error in plot.new() : figure margins too large
> packages
 [1] 17.1 14.0 15.0 12.0  4.3  8.3  4.4  4.0 13.5 15.0 14.0 13.0  4.2  8.2 34.0  4.4 12.5 24.0 15.6 14.0  3.8 65.0  4.0 12.0 15.6 23.0
[27]  5.6 34.0  3.7  7.8  5.9  3.9 12.0 24.0  5.4 24.0 13.7  7.8  5.8 45.0 11.4  5.8 15.4 15.0  3.7 17.6  5.8  3.8  9.4  5.8  5.3 13.0
[53]  3.6  7.3 16.3 14.3  8.4  5.6  5.3 23.0 13.4  6.9  6.4 13.8  7.4 23.0 25.0 13.0  2.8 16.8  6.5  3.7  6.0  5.7 22.0  4.3 98.5 16.5
[79]  6.6  4.3
> cgpa
 [1] 4.15 9.25 4.38 6.11 5.82 5.77 9.04 6.38 9.60 6.48 7.80 8.83 4.67 9.32 8.18 8.18 9.57 4.66 6.38 5.08 8.46 6.88 5.25 8.80 7.59 5.40
[27] 4.13 7.60 7.18 7.15 8.96 8.92 8.08 6.86 5.33 5.67 5.87 9.95 7.16 7.63 6.22 9.30 6.27 6.66 6.77 4.49 5.31 7.81 4.81 9.80 8.10 7.98
[53] 4.28 5.93 6.99 5.47 8.56 7.28 5.00 5.95 4.08 7.86 4.59 8.99 4.37 4.86 7.92 7.06 9.41 6.37 7.64 6.48 8.35 8.80 6.40 8.61 6.94 6.91
[79] 6.72 8.94
> plot(packages,cgpa)
Error in plot.new() : figure margins too large
> plot(packages,cgpa)
> plot(cgpa,packages)